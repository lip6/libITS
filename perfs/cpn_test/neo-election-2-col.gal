GAL neoelection_2 {
	typedef M = 0 .. 2 ;
	typedef BOOL = 0 .. 1 ;
	typedef POS = 0 .. 1 ;
	array [3] crashed = (0, 0, 0) ;
	array [3] dead = (0, 0, 0) ;
	array [3] electedPrimary = (0, 0, 0) ;
	array [3] electedSecondary = (0, 0, 0) ;
	array [3] electionFailed = (0, 0, 0) ;
	array [3] electionInit = (0, 1, 1) ;
	array [18] masterList = (0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0) ;
	array [18] masterState = (0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0) ;
	array [27] negotiation = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1) ;
	array [162] network = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) ;
	array [3] poll__handlingMessage = (0, 0, 0) ;
	array [162] poll__networl = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) ;
	array [3] poll__pollEnd = (0, 0, 0) ;
	array [3] poll__waitingMessage = (0, 0, 0) ;
	array [3] polling = (0, 0, 0) ;
	array [6] sendAnnPs__broadcasting = (0, 0, 0, 0, 0, 0) ;
	array [9] stage = (0, 0, 0, 1, 0, 0, 1, 0, 0) ;
	array [6] startNeg__broadcasting = (0, 0, 0, 0, 0, 0) ;

	transition poll__end (M $m) [poll__pollEnd [$m] >= 1] {
		poll__pollEnd [$m] = poll__pollEnd [$m] - 1 ;
		polling [$m] = polling [$m] + 1 ;
	}

	transition poll__handleAI1 (M $r, M $m, M $s) [$m >= $s && negotiation [$m * 9 + ($r * 3 + 1)] >= 1 &&
	poll__handlingMessage [$m] >= 1 && network [$m * 54 + ($s * 18 + (3 * 3 + 0))] >= 1] {
		negotiation [$m * 9 + ($r * 3 + 1)] = negotiation [$m * 9 + ($r * 3 + 1)] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		network [$m * 54 + ($s * 18 + (3 * 3 + 0))] = network [$m * 54 + ($s * 18 + (3 * 3 + 0))] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		negotiation [$m * 9 + ($r * 3 + 2)] = negotiation [$m * 9 + ($r * 3 + 2)] + 1 ;
	}

	transition poll__handleAI2 (M $r, M $m, M $pm, BOOL $iam, M $s) [$m < $s && poll__handlingMessage [$m] >= 1 &&
	network [$m * 54 + ($s * 18 + (3 * 3 + 0))] >= 1 && masterState [$m * 6 + ($iam * 3 + $pm)] >= 1 && negotiation [$m *
	9 + ($r * 3 + 1)] >= 1] {
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		network [$m * 54 + ($s * 18 + (3 * 3 + 0))] = network [$m * 54 + ($s * 18 + (3 * 3 + 0))] - 1 ;
		masterState [$m * 6 + ($iam * 3 + $pm)] = masterState [$m * 6 + ($iam * 3 + $pm)] - 1 ;
		negotiation [$m * 9 + ($r * 3 + 1)] = negotiation [$m * 9 + ($r * 3 + 1)] - 1 ;
		masterState [$m * 6 + (0 * 3 + $pm)] = masterState [$m * 6 + (0 * 3 + $pm)] + 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		negotiation [$m * 9 + ($r * 3 + 2)] = negotiation [$m * 9 + ($r * 3 + 2)] + 1 ;
	}

	transition poll__handleAnnP1 (M $m, M $pm, BOOL $iam, M $s) [$pm != $m && poll__handlingMessage [$m] >= 1 &&
	masterState [$m * 6 + ($iam * 3 + $pm)] >= 1 && network [$m * 54 + ($s * 18 + (4 * 3 + 0))] >= 1] {
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		masterState [$m * 6 + ($iam * 3 + $pm)] = masterState [$m * 6 + ($iam * 3 + $pm)] - 1 ;
		network [$m * 54 + ($s * 18 + (4 * 3 + 0))] = network [$m * 54 + ($s * 18 + (4 * 3 + 0))] - 1 ;
		masterState [$m * 6 + (0 * 3 + $s)] = masterState [$m * 6 + (0 * 3 + $s)] + 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
	}

	transition poll__handleAnnP2 (M $m, M $s) [network [$m * 54 + ($s * 18 + (4 * 3 + 0))] >= 1 && masterState [$m * 6 +
	(1 * 3 + $m)] >= 1 && poll__handlingMessage [$m] >= 1] {
		network [$m * 54 + ($s * 18 + (4 * 3 + 0))] = network [$m * 54 + ($s * 18 + (4 * 3 + 0))] - 1 ;
		masterState [$m * 6 + (1 * 3 + $m)] = masterState [$m * 6 + (1 * 3 + $m)] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		masterState [$m * 6 + (1 * 3 + 0)] = masterState [$m * 6 + (1 * 3 + 0)] + 1 ;
	}

	transition poll__handleAnsP1 (M $m, M $s) [poll__handlingMessage [$m] >= 1 && network [$m * 54 + ($s * 18 + (1 * 3 +
	0))] >= 1] {
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		network [$m * 54 + ($s * 18 + (1 * 3 + 0))] = network [$m * 54 + ($s * 18 + (1 * 3 + 0))] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		network [$s * 54 + ($m * 18 + (2 * 3 + 0))] = network [$s * 54 + ($m * 18 + (2 * 3 + 0))] + 1 ;
	}

	transition poll__handleAnsP2 (M $m, M $p, BOOL $iam, M $s) [$p != 0 && network [$m * 54 + ($s * 18 + (1 * 3 + $p))]
	>= 1 && poll__handlingMessage [$m] >= 1 && masterState [$m * 6 + ($iam * 3 + $p)] >= 1] {
		network [$m * 54 + ($s * 18 + (1 * 3 + $p))] = network [$m * 54 + ($s * 18 + (1 * 3 + $p))] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		masterState [$m * 6 + ($iam * 3 + $p)] = masterState [$m * 6 + ($iam * 3 + $p)] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		masterState [$m * 6 + (0 * 3 + $p)] = masterState [$m * 6 + (0 * 3 + $p)] + 1 ;
		network [$s * 54 + ($m * 18 + (2 * 3 + 0))] = network [$s * 54 + ($m * 18 + (2 * 3 + 0))] + 1 ;
	}

	transition poll__handleAnsP3 (M $m, M $p, M $pm, BOOL $iam, M $s) [$p != 0 && $pm != 0 && $pm != $p &&
	poll__handlingMessage [$m] >= 1 && masterState [$m * 6 + ($iam * 3 + $pm)] >= 1 && network [$m * 54 + ($s * 18 + (1 *
	3 + $p))] >= 1] {
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		masterState [$m * 6 + ($iam * 3 + $pm)] = masterState [$m * 6 + ($iam * 3 + $pm)] - 1 ;
		network [$m * 54 + ($s * 18 + (1 * 3 + $p))] = network [$m * 54 + ($s * 18 + (1 * 3 + $p))] - 1 ;
		masterState [$m * 6 + (1 * 3 + 0)] = masterState [$m * 6 + (1 * 3 + 0)] + 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
	}

	transition poll__handleAnsP4 (M $m, M $p, BOOL $iam, M $s) [$p != 0 && poll__handlingMessage [$m] >= 1 &&
	poll__networl [$m * 54 + ($s * 18 + (1 * 3 + $p))] >= 1 && masterState [$m * 6 + ($iam * 3 + 0)] >= 1] {
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		poll__networl [$m * 54 + ($s * 18 + (1 * 3 + $p))] = poll__networl [$m * 54 + ($s * 18 + (1 * 3 + $p))] - 1 ;
		masterState [$m * 6 + ($iam * 3 + 0)] = masterState [$m * 6 + ($iam * 3 + 0)] - 1 ;
		masterState [$m * 6 + (0 * 3 + $p)] = masterState [$m * 6 + (0 * 3 + $p)] + 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		network [$s * 54 + ($m * 18 + (2 * 3 + 0))] = network [$s * 54 + ($m * 18 + (2 * 3 + 0))] + 1 ;
	}

	transition poll__handleAskP (M $m, M $pm, BOOL $iam, M $s) [network [$m * 54 + ($s * 18 + (0 * 3 + 0))] >= 1 &&
	poll__handlingMessage [$m] >= 1 && masterState [$m * 6 + ($iam * 3 + $pm)] >= 1] {
		network [$m * 54 + ($s * 18 + (0 * 3 + 0))] = network [$m * 54 + ($s * 18 + (0 * 3 + 0))] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
		network [$s * 54 + ($m * 18 + (1 * 3 + $pm))] = network [$s * 54 + ($m * 18 + (1 * 3 + $pm))] + 1 ;
	}

	transition poll__handleRI (M $m, M $s) [network [$m * 54 + ($s * 18 + (2 * 3 + 0))] >= 1 && poll__handlingMessage
	[$m] >= 1] {
		network [$m * 54 + ($s * 18 + (2 * 3 + 0))] = network [$m * 54 + ($s * 18 + (2 * 3 + 0))] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		network [$s * 54 + ($m * 18 + (3 * 3 + 0))] = network [$s * 54 + ($m * 18 + (3 * 3 + 0))] + 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
	}

	transition poll__handleRP (M $m, M $s) [network [$m * 54 + ($s * 18 + (5 * 3 + 0))] >= 1 && poll__handlingMessage
	[$m] >= 1] {
		network [$m * 54 + ($s * 18 + (5 * 3 + 0))] = network [$m * 54 + ($s * 18 + (5 * 3 + 0))] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] - 1 ;
		poll__pollEnd [$m] = poll__pollEnd [$m] + 1 ;
	}

	transition poll__iAmPrimary (M $m) [stage [$m * 3 + 0] >= 1 && masterState [$m * 6 + (1 * 3 + 0)] >= 1 &&
	poll__waitingMessage [$m] >= 1 && negotiation [$m * 9 + (2 * 3 + 2)] >= 1 && negotiation [$m * 9 + (1 * 3 + 2)] >=
	1] {
		stage [$m * 3 + 0] = stage [$m * 3 + 0] - 1 ;
		masterState [$m * 6 + (1 * 3 + 0)] = masterState [$m * 6 + (1 * 3 + 0)] - 1 ;
		poll__waitingMessage [$m] = poll__waitingMessage [$m] - 1 ;
		stage [$m * 3 + 1] = stage [$m * 3 + 1] + 1 ;
		electedPrimary [$m] = electedPrimary [$m] + 1 ;
		masterState [$m * 6 + (1 * 3 + $m)] = masterState [$m * 6 + (1 * 3 + $m)] + 1 ;
	}

	transition poll__iAmSecondary (M $m, M $pm) [stage [$m * 3 + 0] >= 1 && negotiation [$m * 9 + (2 * 3 + 2)] >= 1 &&
	negotiation [$m * 9 + (1 * 3 + 2)] >= 1 && poll__waitingMessage [$m] >= 1 && masterState [$m * 6 + (0 * 3 + $pm)] >=
	1] {
		stage [$m * 3 + 0] = stage [$m * 3 + 0] - 1 ;
		poll__waitingMessage [$m] = poll__waitingMessage [$m] - 1 ;
		stage [$m * 3 + 2] = stage [$m * 3 + 2] + 1 ;
		electedSecondary [$m] = electedSecondary [$m] + 1 ;
	}

	transition poll__start (M $m) [polling [$m] >= 1] {
		polling [$m] = polling [$m] - 1 ;
		poll__handlingMessage [$m] = poll__handlingMessage [$m] + 1 ;
	}

	transition sendAnnPs__end (M $m) [sendAnnPs__broadcasting [$m * 2 + 1] >= 1] {
		sendAnnPs__broadcasting [$m * 2 + 1] = sendAnnPs__broadcasting [$m * 2 + 1] - 1 ;
		polling [$m] = polling [$m] + 1 ;
	}

	transition sendAnnPs__send (M $r, M $m, POS $i) [sendAnnPs__broadcasting [$m * 2 + $i] >= 1 && masterList [$m * 6 +
	($i * 3 + $r)] >= 1] {
		sendAnnPs__broadcasting [$m * 2 + $i] = sendAnnPs__broadcasting [$m * 2 + $i] - 1 ;
		network [$r * 54 + ($m * 18 + (4 * 3 + 0))] = network [$r * 54 + ($m * 18 + (4 * 3 + 0))] + 1 ;
		sendAnnPs__broadcasting [$m * 2 + ($i + 1) % 2] = sendAnnPs__broadcasting [$m * 2 + ($i + 1) % 2] + 1 ;
	}

	transition sendAnnPs__start (M $m) [electedPrimary [$m] >= 1] {
		electedPrimary [$m] = electedPrimary [$m] - 1 ;
		sendAnnPs__broadcasting [$m * 2 + 0] = sendAnnPs__broadcasting [$m * 2 + 0] + 1 ;
	}

	transition startNeg__end (M $m) [startNeg__broadcasting [$m * 2 + 1] >= 1] {
		startNeg__broadcasting [$m * 2 + 1] = startNeg__broadcasting [$m * 2 + 1] - 1 ;
		polling [$m] = polling [$m] + 1 ;
	}

	transition startNeg__send (M $r, M $m, POS $i) [negotiation [$m * 9 + ($r * 3 + 0)] >= 1 && startNeg__broadcasting
	[$m * 2 + $i] >= 1 && masterList [$m * 6 + ($i * 3 + $r)] >= 1] {
		negotiation [$m * 9 + ($r * 3 + 0)] = negotiation [$m * 9 + ($r * 3 + 0)] - 1 ;
		startNeg__broadcasting [$m * 2 + $i] = startNeg__broadcasting [$m * 2 + $i] - 1 ;
		startNeg__broadcasting [$m * 2 + ($i + 1) % 2] = startNeg__broadcasting [$m * 2 + ($i + 1) % 2] + 1 ;
		negotiation [$m * 9 + ($r * 3 + 1)] = negotiation [$m * 9 + ($r * 3 + 1)] + 1 ;
		network [$r * 54 + ($m * 18 + (0 * 3 + 0))] = network [$r * 54 + ($m * 18 + (0 * 3 + 0))] + 1 ;
	}

	transition startNeg__start (M $m) [electionInit [$m] >= 1] {
		electionInit [$m] = electionInit [$m] - 1 ;
		startNeg__broadcasting [$m * 2 + 0] = startNeg__broadcasting [$m * 2 + 0] + 1 ;
	}

	transition startSec (M $m) [electedSecondary [$m] >= 1] {
		electedSecondary [$m] = electedSecondary [$m] - 1 ;
		polling [$m] = polling [$m] + 1 ;
	}
	TRANSIENT = false ;
}