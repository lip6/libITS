G(!"Fork1" & !WaitRight0) & !HasRight1
(Idle1 & (HasRight1 U !HasLeft1)) | HasRight1 | (!Idle1 & (!HasRight1 R HasLeft1))
((F!IsEating0 & HasLeft1) | (!HasLeft1 & GIsEating0)) U Idle1
(!WaitRight0 R Idle1) R F!IsEating1
(G!Idle1 & F((!WaitLeft1 & HasRight0) | (!HasRight0 & WaitLeft1))) | (FIdle1 & G((!HasRight0 | WaitLeft1) & (!WaitLeft1 | HasRight0)))
(IsEating1 & (((!"Fork1" U HasLeft0) & WaitLeft0) | (("Fork1" R !HasLeft0) & !WaitLeft0))) | (!IsEating1 & (("Fork1" R !HasLeft0) | !WaitLeft0) & ((!"Fork1" U HasLeft0) | WaitLeft0))
((G!WaitLeft0 | !"Fork1") & ("Fork1" | FWaitLeft0) & WaitRight1) | (((G!WaitLeft0 & !"Fork1") | ("Fork1" & FWaitLeft0)) & !WaitRight1)
F((((GIsEating1 & G!WaitRight0) | (F!IsEating1 & FWaitRight0)) & HasLeft1) | (!HasLeft1 & (GIsEating1 | G!WaitRight0) & (F!IsEating1 | FWaitRight0)))
(!IsEating0 & (("Fork1" & HasRight0 & HasRight1) | (!HasRight1 & (!HasRight0 | !"Fork1")))) | (IsEating0 & (!HasRight0 | !HasRight1 | !"Fork1") & (("Fork1" & HasRight0) | HasRight1))
FHasRight0 & (FWaitLeft0 | FHasLeft1)
(Idle0 & G!HasLeft0) | (!"Fork0" & !Idle0) | ("Fork0" & Idle0)
((F!Idle0 R (!IsEating0 | !WaitRight0)) & WaitRight0) | ((GIdle0 U (WaitRight0 & IsEating0)) & !WaitRight0)
((!HasRight1 & !WaitLeft0) | (HasRight1 & WaitLeft0)) R (FWaitLeft0 | IsEating0)
(F(!Idle0 | WaitRight0) & (!"Fork1" | WaitLeft1)) | ("Fork1" & G(Idle0 & !WaitRight0) & !WaitLeft1)
G((!IsEating1 & !"Fork0" & WaitLeft0) | (!WaitLeft0 & ("Fork0" | IsEating1)))
(FHasRight0 & G!Idle1) | (G!HasRight0 & FIdle1)
GIdle1 & (F!HasRight0 | !Idle1)
(WaitRight1 | HasLeft1) & ((FIsEating0 & IsEating1) | (G!IsEating0 & !IsEating1))
FWaitRight1 U ((!WaitLeft1 & ((Idle0 & !HasLeft1) | (!Idle0 & HasLeft1))) | ((!Idle0 | HasLeft1) & WaitLeft1 & (Idle0 | !HasLeft1)))
(Idle0 & (!HasRight1 | (G!WaitLeft0 U !Idle0)) & ((FWaitLeft0 R Idle0) | HasRight1)) | (!Idle0 & ((!HasRight1 & (G!WaitLeft0 U !Idle0)) | ((FWaitLeft0 R Idle0) & HasRight1)))
((WaitLeft0 U "Fork1") & GHasRight0) | (F!HasRight0 & (!WaitLeft0 R !"Fork1"))
(!Idle0 & ("Fork0" | WaitRight1) & (!"Fork0" | !WaitRight1)) | (Idle0 & (("Fork0" & WaitRight1) | (!"Fork0" & !WaitRight1)))
F(Idle0 | (!HasLeft1 & (Idle1 U "Fork0")) | ((!Idle1 R !"Fork0") & HasLeft1))
("Fork1" & !HasLeft1 & G!WaitLeft0) | ((FWaitLeft0 | !"Fork1") & HasLeft1)
(((GIsEating0 & FHasLeft1) | (F!IsEating0 & G!HasLeft1)) & GHasRight0) | (F!HasRight0 & (F!IsEating0 | G!HasLeft1) & (GIsEating0 | FHasLeft1))
Idle1 & ("Fork0" | (FHasRight1 & !"Fork1"))
(!WaitLeft0 | HasRight0) U ((!HasRight0 & !WaitRight1) | (WaitRight1 & HasRight0))
(FGHasLeft1 & (G!WaitRight1 R !WaitLeft1)) | ((FWaitRight1 U WaitLeft1) & GF!HasLeft1)
F!WaitRight0 | ("Fork0" & FWaitLeft0) | (G!WaitLeft0 & !"Fork0")
!IsEating0 | ("Fork1" & F!"Fork1")
F((Idle0 & (!"Fork1" U !HasRight1) & IsEating1) | (!Idle0 & (("Fork1" R HasRight1) | !IsEating1)))
F(((F!WaitRight1 | HasRight1) & (!HasRight1 | GWaitRight1)) R !IsEating1)
(!HasRight0 & GWaitRight1) | (F!WaitRight1 & HasRight0)
F((!HasLeft0 & !WaitRight0) | (WaitRight0 & HasLeft0)) U !Idle0
(!HasLeft0 | WaitLeft0) R (!"Fork0" | HasRight1)
(!HasRight0 & (("Fork1" U "Fork0") R !HasRight1)) | (((!"Fork1" R !"Fork0") U HasRight1) & HasRight0)
((!HasLeft1 R ((HasRight1 | HasLeft1) & (!HasLeft1 | !HasRight1))) & G!"Fork1") | (F"Fork1" & (HasLeft1 U ((HasRight1 & HasLeft1) | (!HasLeft1 & !HasRight1))))
(((Idle0 | !HasRight0) & (!Idle0 | HasRight0)) | (Idle1 & !WaitLeft0)) & ((!Idle0 & HasRight0) | !Idle1 | (Idle0 & !HasRight0) | WaitLeft0)
F(Idle1 | ((!HasRight1 | !WaitLeft0) & (HasRight1 | WaitLeft0))) U IsEating0
(F!IsEating1 | WaitLeft0) & (!WaitLeft0 | GIsEating1) & G!WaitRight1
Idle0 & ((IsEating0 & HasLeft0) | (!HasLeft0 & !IsEating0)) & F"Fork1"
(((G"Fork1" | !WaitLeft1) & (WaitLeft1 | F!"Fork1")) | WaitRight0) & ((G"Fork1" & !WaitLeft1) | !WaitRight0 | (WaitLeft1 & F!"Fork1"))
WaitRight0 R ("Fork1" & (FWaitRight1 | HasLeft1))
F"Fork0" | F(!"Fork1" & !WaitRight0)
((HasRight0 R WaitLeft0) & ((GWaitRight0 & HasRight1) | (F!WaitRight0 & !HasRight1))) | ((!HasRight0 U !WaitLeft0) & (F!WaitRight0 | !HasRight1) & (GWaitRight0 | HasRight1))
WaitLeft0 & F(F!HasLeft0 & !"Fork1")
(!HasRight1 & !"Fork1") | !"Fork0"
(WaitLeft0 U GHasLeft0) U (Idle0 & HasLeft1)
G((FIdle0 | !Idle1) & (Idle1 | G!Idle0))
(FIsEating1 | (Idle1 & WaitLeft0)) U Idle0
(((!"Fork1" & WaitLeft0) | !IsEating0) & GHasLeft1) | (("Fork1" | !WaitLeft0) & F!HasLeft1 & IsEating0)
(F!WaitLeft0 | (("Fork0" | !HasRight1) & (!"Fork0" | HasRight1))) & (GWaitLeft0 | ("Fork0" & !HasRight1) | (!"Fork0" & HasRight1))
F((!HasLeft1 | WaitRight1) & (!WaitRight1 | HasLeft1))
(HasRight1 | !WaitRight1) R F(HasRight1 U Idle0)
FIdle1 R ("Fork1" & F!"Fork0")
((Idle1 | G!IsEating0) & HasRight0) | (FIsEating0 & !HasRight0 & !Idle1)
G(F!IsEating1 & F!WaitLeft1)
GF((!WaitLeft0 | !WaitLeft1) & (WaitLeft0 | WaitLeft1))
(F!WaitRight0 & GHasLeft0) | (F!HasLeft0 & GWaitRight0)
!WaitLeft1 | (!"Fork0" & GWaitLeft0) | WaitLeft0
F(((FIdle1 U Idle1) & GWaitLeft0) | (F!WaitLeft0 & (G!Idle1 R !Idle1)))
(("Fork1" | FWaitLeft0) & !WaitRight0) | (G!WaitLeft0 & !"Fork1" & WaitRight0)
(FWaitLeft0 & GFIsEating1) | (G!WaitLeft0 & FG!IsEating1)
((("Fork0" & !WaitRight0) | (!"Fork0" & WaitRight0)) & FHasLeft1) | IsEating1
(F!IsEating0 & GIdle1 & WaitLeft0) | ((!WaitLeft0 | F!Idle1) & GIsEating0)
!"Fork1" R (FWaitLeft0 & GWaitRight1)
("Fork0" & (G!IsEating1 R (!"Fork0" | !WaitRight1))) | (!"Fork0" & (FIsEating1 U ("Fork0" & WaitRight1)))
(HasRight0 & IsEating0) | (!HasRight0 & !IsEating0)
G((WaitRight0 & (GFHasLeft0 | HasLeft0)) | (!HasLeft0 & FG!HasLeft0 & !WaitRight0))
F(F!WaitLeft0 R (!Idle1 R !HasLeft0))
(G!HasRight1 & !IsEating0) | (!Idle0 & !Idle1) | (Idle0 & Idle1) | (FHasRight1 & IsEating0)
(!HasRight0 | HasRight1) & G((WaitRight1 & HasLeft1) | (!HasLeft1 & !WaitRight1))
FHasLeft1 U (!WaitLeft1 | F!"Fork1")
((FIsEating0 U IsEating0) U WaitRight1) R WaitRight0
(FHasLeft0 | (HasRight0 R !HasRight1)) & ((!HasRight0 U HasRight1) | G!HasLeft0)
("Fork1" & F(!HasLeft1 U !IsEating0)) | (!"Fork1" & GIsEating0)
G(F!WaitLeft1 & FG!Idle0)
((!Idle0 | HasLeft1) & (Idle0 | !HasLeft1)) R IsEating0
(WaitRight0 & WaitRight1) | WaitLeft1 | F!"Fork1"
(((WaitRight0 & WaitLeft1) | (!WaitLeft1 & !WaitRight0)) & !"Fork0") | ("Fork0" & (!WaitLeft1 | !WaitRight0) & (WaitRight0 | WaitLeft1))
F((G"Fork1" & ("Fork0" U HasLeft0)) | ((!"Fork0" R !HasLeft0) & F!"Fork1"))
((WaitRight0 R HasRight0) & (G!"Fork0" R !WaitRight1)) | ((F"Fork0" U WaitRight1) & (!WaitRight0 U !HasRight0))
G!HasLeft1 | (FWaitLeft1 & GWaitRight0) | (F!WaitRight0 & G!WaitLeft1)
(!HasLeft1 & ((FIdle0 & !WaitLeft1) | !IsEating0 | (G!Idle0 & WaitLeft1)) & (((G!Idle0 | WaitLeft1) & (FIdle0 | !WaitLeft1)) | IsEating0)) | ((((G!Idle0 | WaitLeft1) & IsEating0 & (FIdle0 | !WaitLeft1)) | (!IsEating0 & ((FIdle0 & !WaitLeft1) | (G!Idle0 & WaitLeft1)))) & HasLeft1)
F(F(FWaitRight1 & WaitLeft0) R IsEating0)
(F!WaitRight1 | F(!"Fork1" | !WaitRight0)) & (G("Fork1" & WaitRight0) | GWaitRight1)
(((!WaitLeft1 & HasRight0) | (!HasRight0 & WaitLeft1)) & !HasRight1) | WaitLeft1 | ((!HasRight0 | WaitLeft1) & HasRight1 & (!WaitLeft1 | HasRight0))
FWaitLeft1 | (!WaitRight1 R !HasRight0)
(F!IsEating1 & (FHasLeft1 U !Idle1)) | (GIsEating1 & (G!HasLeft1 R Idle1))
(!HasRight0 & ((Idle1 & F((!HasLeft0 | !WaitLeft0) & (WaitLeft0 | HasLeft0))) | (!Idle1 & G((WaitLeft0 & HasLeft0) | (!HasLeft0 & !WaitLeft0))))) | ((Idle1 | F((!HasLeft0 | !WaitLeft0) & (WaitLeft0 | HasLeft0))) & HasRight0 & (!Idle1 | G((WaitLeft0 & HasLeft0) | (!HasLeft0 & !WaitLeft0))))
(((!WaitRight0 R !Idle1) | !"Fork0") & ("Fork0" | (WaitRight0 U Idle1))) | Idle1
G((FG!HasRight1 & HasRight1) | (!HasRight1 & GFHasRight1))
FG(HasLeft1 U (Idle0 | G!IsEating0))
("Fork0" & GWaitRight1 & (!WaitLeft1 | HasLeft0)) | ((!"Fork0" | (!HasLeft0 & WaitLeft1)) & F!WaitRight1)
((!Idle0 & (!Idle1 R !WaitLeft0)) | (Idle0 & (Idle1 U WaitLeft0))) & !HasRight0
(("Fork1" & WaitLeft1) | (!WaitLeft1 & !"Fork1")) U (!"Fork0" | HasRight1)
(("Fork1" | !IsEating1) & F!HasLeft1 & (!"Fork1" | IsEating1)) | (((!"Fork1" & IsEating1) | ("Fork1" & !IsEating1)) & GHasLeft1)
(FWaitRight1 & F!Idle0) | (GIdle0 & G!WaitRight1)
((WaitRight0 R !Idle1) & F!Idle0) | (GIdle0 & (!WaitRight0 U Idle1))
G((HasRight1 & HasLeft0) | (!HasLeft0 & !HasRight1) | GWaitLeft0)
