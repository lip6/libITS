name: OSX Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [macOS]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Install packages
      run: brew install gcc autoconf automake libtool binutils bison flex ;    
    - name: Check Version
      run: bison -y --version ; flex --version ; /usr/local/opt/bison/bin/bison --version ;/usr/local/opt/flex/bin/flex --version
    - name: libGMP
      run: wget --progress=dot:mega https://gmplib.org/download/gmp/gmp-6.1.2.tar.bz2 ; tar xjf gmp-6.1.2.tar.bz2 ; cd gmp-6.1.2 ; ./configure CXX='g++-10' CC='gcc-10' AR='gcc-ar-10' NM='gcc-nm-10' RANLIB='gcc-ranlib-10' --enable-cxx --enable-fat --prefix=$(pwd)/../usr/local ; make -j ; make install ; cd .. ;    
    - name: libExpat
      run: wget --progress=dot:mega https://github.com/libexpat/libexpat/archive/R_2_2_4.tar.gz ; tar xzf R_2_2_4.tar.gz ; cd libexpat-R_2_2_4/expat/ ; ./buildconf.sh ; ./configure CXX='g++-10' CC='gcc-10' AR='gcc-ar-10' NM='gcc-nm-10' RANLIB='gcc-ranlib-10' --prefix=$(pwd)/../../usr/local --without-xmlwf ; make -j ; make install ; cd ../.. ;     
    - name: ANTLR
      run: /bin/bash ./antlr.sh
    - name: tag version date
      run: /bin/sh ./tag.sh
    - name: autoreconf
      run: autoreconf -vfi
    - name: Grab libDDD artefacts
      run: wget --progress=dot:mega https://github.com/lip6/libDDD/raw/${{ runner.os }}/${{ runner.os }}.tgz ; tar xzf ${{ runner.os }}.tgz ;
    - name: configure
      run: ./configure YACC='/usr/local/opt/bison/bin/bison -y' AR='gcc-ar-10' NM='gcc-nm-10' RANLIB='gcc-ranlib-10' CXX='g++-10' CC='gcc-10' --prefix=$PWD/usr/local/  --with-libexpat=$PWD/usr/local/ --with-libddd=$PWD/usr/local/ --with-gmp=$PWD/usr/local/ --with-antlrc=$PWD/usr/local/   --with-antlrjar=$PWD/usr/local/lib/antlr-3.4-complete.jar CPPFLAGS="-I$(pwd)/usr/local/include -DNDEBUG" LDFLAGS="-L$(pwd)/usr/local/lib" || cat config.log ; 
    - name: make 
      run: make -j 4
    - name: run tests
      run: cd tests ; ( rc=0 ; for TEST in *.data ; do ./run_test.pl $TEST || rc=$? ; done; exit $rc) ; cd ..
    - name: strip binaries
      run: ls -lah bin/its-reach bin/gal2c ; strip bin/its-reach ; ls -lah bin/its-reach bin/gal2c ; strip -S -x bin/its-reach ; ls -lah bin/its-reach bin/gal2c ; cp bin/its-reach website/its-reach ; strip -s bin/gal2c ; cp bin/gal2c website/gal2c
    - name: make install
      run: make install
    - name: prepare artefact      
      run: tar cvzf ${{ runner.os }}.tgz usr/ ; mv ${{ runner.os }}.tgz website/
    - name: make dist
      run: make dist ;  mv its*.tar.gz website/ ;
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ runner.os }} # The branch the action should deploy to.
          FOLDER: website/ # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch 
