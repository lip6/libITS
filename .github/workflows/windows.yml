name: windows build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [Windows]

jobs:
  build:
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        check-latest: true    
    - name: install packages
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; pacman --noconfirm -S gmp-devel ; pacman --noconfirm -S  p7zip"
    - name: get libDDD
      run: C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; cd /D/a/libITS/libITS ; wget --progress=dot:mega  https://github.com/lip6/libDDD/raw/Windows/windows.zip ; 7z x windows.zip ; rm windows.zip"
    - name: handle ANTLR
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; cd /D/a/libITS/libITS  ; ./antlr.sh ;"
    - name: build ANTLR grammar
      run:  cd its\gal\parser ; java -jar ../../../usr/local/lib/antlr-3.4-complete.jar exprParser.g
    - name: configure and make
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; cd /D/a/libITS/libITS  ; (autoreconf -vfi && ./configure --prefix=/D/a/libITS/libITS/usr/local/ CPPFLAGS=-I/D/a/libITS/libITS/usr/local/include LDFLAGS=-L/D/a/libITS/libITS/usr/local/lib --with-antlrc=/D/a/libITS/libITS/usr/local/ --with-antlrjar=/D/a/libITS/libITS/usr/local/lib/antlr-3.4-complete.jar --enable-nolto --enable-mingw-native && make && make install) || cat config.log"
    - name: package zip
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; cd /D/a/libITS/libITS  ;  mkdir site ; strip -s bin/its-reach.exe ; cp bin/its-reach.exe site/; 7z a -tzip windows.zip usr/ ; mv windows.zip site/"
    - name: Upload Artifacts üî∫ # The project is then uploaded as an artifact named 'site'.
      uses: actions/upload-artifact@v3
      with:
        name: site
        path: site/
    
  deploy:
    needs: [build] # The second job must depend on the first one to complete before running, and uses ubuntu-latest instead of windows.

    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Download Artifacts üîª # The built project is downloaded into the 'site' folder.
        uses: actions/download-artifact@v3
        with:
          name: site

      - name: move to website
        run: ls -lah ; mkdir -p windows ; cp windows.zip windows/ ; cp its-reach.exe windows ; ls -lah windows/
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          branch: Windows
          folder: windows/ # The deployment folder should match the name of the artifact. Even though our project builds into the 'build' folder the artifact name of 'site' must be placed here.
          clean: true # Automatically remove deleted files from the deploy branch
          single-commit: true 
      - name: Trigger libITS
        uses: mvasigh/dispatch-action@main
        with:
          # You should create a personal access token and store it in your repository
          token: ${{ secrets.NOTIF_PAT }}
          repo: ITS-CTL
          owner: lip6
          event_type: Windows
