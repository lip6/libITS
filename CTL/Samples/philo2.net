#place (0) Idle0 mk(<..>)
#place (0) WaitLeft0
#place (0) HasLeft0
#place (0) WaitRight0
#place (0) HasRight0
#place (0) Fork0 mk(<..>)
#place (1) Idle1 mk(<..>)
#place (1) WaitLeft1
#place (1) HasLeft1
#place (1) WaitRight1
#place (1) HasRight1
#place (1) Fork1 mk(<..>)
#trans GoEat0
in {Idle0:<..>;}
out {WaitLeft0:<..>;WaitRight0:<..>;}
#endtr
#trans GoLeft0
in {Fork1:<..>;WaitLeft0:<..>;}
out {HasLeft0:<..>;}
#endtr
#trans GoRight0
in {Fork0:<..>;WaitRight0:<..>;}
out {HasRight0:<..>;}
#endtr
#trans Release0
in {HasLeft0:<..>;HasRight0:<..>;}
out {Idle0:<..>;Fork1:<..>;Fork0:<..>;}
#endtr
#trans GoEat1
in {Idle1:<..>;}
out {WaitLeft1:<..>;WaitRight1:<..>;}
#endtr
#trans GoLeft1
in {Fork0:<..>;WaitLeft1:<..>;}
out {HasLeft1:<..>;}
#endtr
#trans GoRight1
in {Fork1:<..>;WaitRight1:<..>;}
out {HasRight1:<..>;}
#endtr
#trans Release1
in {HasLeft1:<..>;HasRight1:<..>;}
out {Idle1:<..>;Fork0:<..>;Fork1:<..>;}
#endtr
